name: Benchmark

on:
  pull_request:
    branches: [ master, main ]
    paths:
      - '**.go'
      - 'go.mod'
      - 'go.sum'
      - 'benchmarks/**'
      - '.github/workflows/benchmark.yml'
  workflow_dispatch:  # Manual trigger

permissions:
  contents: read
  pull-requests: write

jobs:
  benchmark:
    name: Performance Regression Check
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Install benchstat
        run: go install golang.org/x/perf/cmd/benchstat@latest

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run Worker Pool Benchmarks
        id: bench-worker
        run: |
          echo "Running worker pool benchmarks..."
          go test -bench='^BenchmarkPool_.*Workers[^_]' -benchmem -benchtime=10x ./internal/worker/ 2>&1 | tee /tmp/current-worker.txt
          echo "benchmark_ran=true" >> $GITHUB_OUTPUT

      - name: Run Parser Benchmarks
        id: bench-parser
        run: |
          echo "Running parser benchmarks..."
          go test -bench='^BenchmarkParseJSONL' -benchmem -benchtime=10x ./internal/parser/ 2>&1 | tee /tmp/current-parser.txt
          echo "benchmark_ran=true" >> $GITHUB_OUTPUT

      - name: Run Database Benchmarks
        id: bench-database
        run: |
          echo "Running database benchmarks..."
          go test -bench=. -benchmem -benchtime=10x ./internal/database/ 2>&1 | tee /tmp/current-database.txt
          echo "benchmark_ran=true" >> $GITHUB_OUTPUT

      - name: Compare with Baseline - Worker
        id: compare-worker
        continue-on-error: true
        run: |
          if [ -f "benchmarks/baseline-worker.txt" ]; then
            echo "Comparing worker benchmarks..."
            benchstat benchmarks/baseline-worker.txt /tmp/current-worker.txt > /tmp/worker-comparison.txt || true
            cat /tmp/worker-comparison.txt
            
            # Check for significant regressions (>15% slower)
            if grep -E '\+[1-9][5-9]\.[0-9]+%|\+[2-9][0-9]\.[0-9]+%' /tmp/worker-comparison.txt | grep -qv '^#'; then
              echo "regression=true" >> $GITHUB_OUTPUT
              echo "⚠️ Performance regression detected in worker pool!"
            else
              echo "regression=false" >> $GITHUB_OUTPUT
              echo "✅ No significant regression in worker pool"
            fi
          else
            echo "⚠️ No worker baseline found"
            echo "regression=false" >> $GITHUB_OUTPUT
          fi

      - name: Compare with Baseline - Parser
        id: compare-parser
        continue-on-error: true
        run: |
          if [ -f "benchmarks/baseline-parser.txt" ]; then
            echo "Comparing parser benchmarks..."
            benchstat benchmarks/baseline-parser.txt /tmp/current-parser.txt > /tmp/parser-comparison.txt || true
            cat /tmp/parser-comparison.txt
            
            if grep -E '\+[1-9][5-9]\.[0-9]+%|\+[2-9][0-9]\.[0-9]+%' /tmp/parser-comparison.txt | grep -qv '^#'; then
              echo "regression=true" >> $GITHUB_OUTPUT
              echo "⚠️ Performance regression detected in parser!"
            else
              echo "regression=false" >> $GITHUB_OUTPUT
              echo "✅ No significant regression in parser"
            fi
          else
            echo "⚠️ No parser baseline found"
            echo "regression=false" >> $GITHUB_OUTPUT
          fi

      - name: Compare with Baseline - Database
        id: compare-database
        continue-on-error: true
        run: |
          if [ -f "benchmarks/baseline-database.txt" ]; then
            echo "Comparing database benchmarks..."
            benchstat benchmarks/baseline-database.txt /tmp/current-database.txt > /tmp/database-comparison.txt || true
            cat /tmp/database-comparison.txt
            
            if grep -E '\+[1-9][5-9]\.[0-9]+%|\+[2-9][0-9]\.[0-9]+%' /tmp/database-comparison.txt | grep -qv '^#'; then
              echo "regression=true" >> $GITHUB_OUTPUT
              echo "⚠️ Performance regression detected in database!"
            else
              echo "regression=false" >> $GITHUB_OUTPUT
              echo "✅ No significant regression in database"
            fi
          else
            echo "⚠️ No database baseline found"
            echo "regression=false" >> $GITHUB_OUTPUT
          fi

      - name: Comment PR with Benchmark Results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            let comment = '## 🏁 Benchmark Results\n\n';
            
            // Worker comparison
            if (fs.existsSync('/tmp/worker-comparison.txt')) {
              const workerComp = fs.readFileSync('/tmp/worker-comparison.txt', 'utf8');
              comment += '### Worker Pool Benchmarks\n\n';
              comment += '```\n' + workerComp + '\n```\n\n';
            }
            
            // Parser comparison
            if (fs.existsSync('/tmp/parser-comparison.txt')) {
              const parserComp = fs.readFileSync('/tmp/parser-comparison.txt', 'utf8');
              comment += '### Parser Benchmarks\n\n';
              comment += '```\n' + parserComp + '\n```\n\n';
            }
            
            // Database comparison
            if (fs.existsSync('/tmp/database-comparison.txt')) {
              const databaseComp = fs.readFileSync('/tmp/database-comparison.txt', 'utf8');
              comment += '### Database Benchmarks\n\n';
              comment += '```\n' + databaseComp + '\n```\n\n';
            }
            
            comment += '---\n\n';
            comment += '**Legend:**\n';
            comment += '- `~` means no statistically significant change\n';
            comment += '- `+X%` means slower (regression)\n';
            comment += '- `-X%` means faster (improvement)\n\n';
            comment += '**Threshold:** Regressions >15% are flagged as warnings.\n\n';
            comment += '💡 To update baseline: `make bench-baseline` and commit changes.\n';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Fail on Regression
        if: |
          steps.compare-worker.outputs.regression == 'true' ||
          steps.compare-parser.outputs.regression == 'true' ||
          steps.compare-database.outputs.regression == 'true'
        run: |
          echo "❌ Performance regression detected!"
          echo ""
          echo "Review the benchmark comparison above."
          echo "If the regression is expected, update the baseline with:"
          echo "  make bench-baseline"
          echo "  git add benchmarks/"
          echo "  git commit -m 'chore: Update benchmark baseline'"
          exit 1
